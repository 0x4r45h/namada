name: Automation Tasks

on:
  issue_comment:
    types: [created]

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  GIT_LFS_SKIP_SMUDGE: 1
  CHAIN_BUCKET: anoma-iac-files-master

jobs:
  with_py: # tasks that are using python scripts from anoma-ci-iac
    if: ${{ github.event.issue.pull_request }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: ${{ matrix.make.timeout }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        make:
          - name: Update wasm
            comment: pls update wasm
            command: update-wasm.py
            logs: 'false'
            timeout: 15
          - name: Publish wasm
            comment: pls publish wasm
            command: publish-wasm.py
            logs: 'false'
            timeout: 15
          - name: Spawn devnet
            comment: pls spawn devnet
            command: spawn-devnet.py
            logs: 'false'
            timeout: 25

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::375643557360:role/anoma-github-action-ci-master
          aws-region: eu-west-1
      - uses: khan/pull-request-comment-trigger@v1.1.0
        id: check
        with: 
          trigger: ${{ matrix.make.comment }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: xt0rted/pull-request-comment-branch@v1
        if: steps.check.outputs.triggered == 'true'
        id: comment-branch
      - uses: actions/checkout@v3
        if: steps.check.outputs.triggered == 'true'
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
      - name: Run task ${{ matrix.make.name }}
        if: steps.check.outputs.triggered == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          pip3 install ghapi boto3 toml requests py-markdown-table >/dev/null 2>&1
          aws s3 cp s3://$CHAIN_BUCKET/scripts/${{ matrix.make.command }} .github/workflows/scripts/
          python3 .github/workflows/scripts/${{ matrix.make.command }}
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_READ_ORG_TOKEN: ${{ secrets.GT_READ_ORG }}
          GITHUB_DISPATCH_TOKEN: ${{ secrets.GT_DISPATCH }}
          SLACK_DEVNET_SECRET: ${{ secrets.SLACK_DEVNET_SECRET }}
          BINARIES_COMMIT_SHA: ${{ steps.comment-branch.outputs.head_sha }}
      - name: Comment not found
        if: steps.check.outputs.triggered != 'true'
        run: echo "Comment \"$COMMENT\" not matched"
        env:
          COMMENT: ${{ matrix.make.comment }}

  tasks: # tasks with commands with no external deps
    if: ${{ github.event.issue.pull_request }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: ${{ matrix.make.timeout }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        make:
          - name: Run PoS state-machine tests
            comment: pls run pos tests
            command: PROPTEST_CASES=300 make test-pos-sm # PoS state machine tests
            timeout: 600 # 10 hours

    steps:
      - uses: khan/pull-request-comment-trigger@v1.1.0
        id: check
        with: 
          trigger: ${{ matrix.make.comment }}
          reaction: eyes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: xt0rted/pull-request-comment-branch@v1
        if: steps.check.outputs.triggered == 'true'
        id: comment-branch
      - uses: actions/checkout@v3
        if: steps.check.outputs.triggered == 'true'
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        if: steps.check.outputs.triggered == 'true'
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run task ${{ matrix.make.name }}
        if: steps.check.outputs.triggered == 'true'
        run: ${{ matrix.make.command }}
